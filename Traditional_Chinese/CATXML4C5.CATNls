ERROR_1 = "Notation '/p1' has already been declared";
ERROR_2 = "Attribute '/p1' has already been declared for element '/p2'";
ERROR_3 = "Encoding (/p1, from XMLDecl or manually set) contradicts the auto-sensed encoding, ignoring it";
ERROR_4 = "Element '/p1' was referenced in a content model but never declared";
ERROR_5 = "Element '/p1' was referenced in an attlist but never declared";
ERROR_6 = "An exception occurred! Type:/p1, Message:/p2";
ERROR_9 = "/p1 is unsupported";
ERROR_10 = "Error: Top level complexType has no name - declaration ignored";
ERROR_11 = "Globally-declared attribute must have a name - attribute declaration ignored";
ERROR_12 = "Attribute must have a name or a ref - attribute declaration ignored";
ERROR_13 = "Globally-declared element must have a name - element declaration ignored";
ERROR_14 = "Element must have a name or a ref attribute - element ignored";
ERROR_15 = "<group> must have a name or a ref attribute - declaration ignored";
ERROR_16 = "<attributeGroup> must have a name or a ref attribute - declaration ignored";
ERROR_17 = "Anonymous complexType in element /p1 has a name attribute";
ERROR_18 = "Anonymous simpleType in element /p1 has a name attribute";
ERROR_19 = "The content of an element information item does not match (annotation?, (simpleType | complexType)?, (unique | key | keyref)*)";
ERROR_20 = "Untyped element: /p1";
ERROR_21 = "Error in content of simpleType";
ERROR_22 = "Expected simpleType in 'list' declaration for /p1";
ERROR_23 = "List | Union | Restriction content is invalid for type /p1";
ERROR_24 = "Error in content of derivation by list for /p1";
ERROR_25 = "Expected simpleType in 'restriction' declaration for /p1";
ERROR_26 = "Facet /p1 already defined - ignoring";
ERROR_27 = "Expected simpleType in 'union' declaration for /p1";
ERROR_28 = "SimpleType content is empty";
ERROR_29 = "The content of the simpleContent element is invalid. The content must be RESTRICTION or EXTENSION";
ERROR_30 = "The BASE attribute must be specified for the RESTRICTION or EXTENSION element";
ERROR_31 = "The content of the complexContent element is invalid. The content must be RESTRICTION or EXTENSION";
ERROR_32 = "Error in content of <schema> element information item";
ERROR_33 = "Content (annotation?,..) is incorrect for type /p1";
ERROR_34 = "Unknown simpleType: /p1";
ERROR_35 = "Unknown complexType: /p1";
ERROR_36 = "Prefix: '/p1' can not be resolved to a URI";
ERROR_37 = "Ref element /p1 not found in the Schema";
ERROR_38 = "Type not found in /p1:/p2";
ERROR_39 = "Could not find top level attribute: /p1";
ERROR_40 = "Invalid child '/p1' in the complex type";
ERROR_41 = "Base type could not be found: /p1";
ERROR_42 = "No attribute '/p1' was defined in schema: /p2";
ERROR_43 = "Error creating datatype validator: /p1";
ERROR_44 = "Invalid child following the simpleContent child in the complexType";
ERROR_45 = "Invalid child following the complexContent child in the complexType";
ERROR_46 = "The 'block' attribute values of a complexType must be #all | list(restriction,extension); /p1 was found";
ERROR_47 = "The 'final' attribute values of a complexType must be #all | list(restriction,extension); /p1 was found";
ERROR_48 = "An attribute cannot have both 'fixed' and 'default' present at the same time - default used";
ERROR_49 = "If default and use are both present, use must have the value 'optional'.";
ERROR_50 = "Local attribute:/p1 has also a ref defined - name ignored";
ERROR_51 = "Global attribute:'/p1' cannot have a ref defined";
ERROR_52 = "Error: Attribute '/p1' declared more than once in the same scope- ignoring";
ERROR_53 = "Attribute declarations may not contain both a type and a simpleType declaration";
ERROR_54 = "SimpleType (/p1:/p2) for attribute: /p3 not found";
ERROR_55 = "An element cannot have both 'fixed' and 'default' present at the same time";
ERROR_56 = "/p1:'/p2' has also a ref defined - name ignored";
ERROR_57 = "ref cannot appear with any of type, abstract, block, final, nillable, default or fixed";
ERROR_58 = "Invalid /p1 name:'/p2' - declaration ignored";
ERROR_59 = "Globally-declared element /p1 cannot have a ref attribute - ref ignored";
ERROR_60 = "Element '/p1' cannot have both a type attribute and a simpleType/complexType type child";
ERROR_61 = "Element /p1 has a fixed or default value and must have a mixed simple or simple content model";
ERROR_62 = "The simpleType /p1 that /p2 uses has a value of 'final' which does not permit extension";
ERROR_63 = "The type '/p1' specified as the base in the simpleContent element must not have complexContent";
ERROR_64 = "The type '/p1' is a simple type. It cannot be used in a derivation by RESTRICTION for a complexType";
ERROR_65 = "Invalid child following the RESTRICTION or EXTENSION element in the simpleContent definition";
ERROR_66 = "Invalid child following the RESTRICTION or EXTENSION element in the complexContent definition";
ERROR_67 = "Annotation can only appear once: type /p1";
ERROR_68 = "The base type /p1 does not allow itself to be used as the base for a restriction and/or as a type in a list and/or union";
ERROR_69 = "The value 'substitution' already in the list";
ERROR_70 = "The value 'union' is already in the list";
ERROR_71 = "The value 'extension' is already in the list";
ERROR_72 = "The value 'list' is already in the list";
ERROR_73 = "The value 'restriction' is already in the list";
ERROR_74 = "Invalid block value: /p1";
ERROR_75 = "Invalid final value: /p1";
ERROR_76 = "Element /p1 cannot be part of the substitution group headed by /p2";
ERROR_77 = "Element /p1 has a type which does not derive from the type of the element at the head of the substitution group";
ERROR_78 = "Duplicate element decl in the same scope: /p1";
ERROR_79 = "The 'block' attribute values of an element must be #all | list(substitution,restriction,extension); /p1 was found";
ERROR_80 = "The 'final' attribute values of an element must be #all | list(restriction,extension); /p1 was found";
ERROR_81 = "Invalid value '/p1' for attribute: '/p2'.";
ERROR_82 = "Ref is present, and simpleType/form/type found";
ERROR_83 = "Duplicate reference attribute /p1:/p2 in complexType";
ERROR_84 = "Derivation by restriction is forbidden by either the base type '/p1' or the schema";
ERROR_85 = "Derivation by extension is forbidden by either the base type '/p1' or the schema";
ERROR_86 = "The base type specified in the complexContent element must be a complexType";
ERROR_87 = "Imported schema '/p1' has a different targetNameSpace '/p2' from what's declared '/p3'";
ERROR_88 = "Could not get the doc root for imported Schema: /p1";
ERROR_89 = "A schemaLocation attribute must be specified on '/p1' element.";
ERROR_90 = "Included schema '/p1' has a different targetNameSpace '/p2'";
ERROR_91 = "At most one <annotation> element is expected in the content.";
ERROR_92 = "The content must be (annotation?, simpleType?) for attribute '/p1=/p2'";
ERROR_93 = "Attribute '/p1' must appear in /p2 /p3 declarations";
ERROR_94 = "Attribute '/p1' cannot appear in /p2 /p3 declarations";
ERROR_95 = "Value of minOccurs '/p1' must not be greater than value of maxOccurs '/p2'";
ERROR_96 = "'anyAttribute' elements can contain at most one 'annotation' element in their children";
ERROR_97 = "Global </p1> must have a name - declaration ignored";
ERROR_98 = "No circular definitions are allowed: '/p1'";
ERROR_99 = "Global /p1:'/p2' declared more than once or also declared as /p3";
ERROR_100 = "Global /p1:'/p2' declared more than once";
ERROR_101 = "Invalid value '/p1' for facet 'whiteSpace'. Value should be 'collapse'.";
ERROR_102 = "The namespace of an <import> element must be different from the targetNamespace of the <import>ing schema";
ERROR_103 = "If the namespace on an <import> element is not present, the <import>ing schema must have a targetNamespace";
ERROR_104 = "Element '/p1' must not have a value constraint:'/p2' as its type is derived from ID";
ERROR_105 = "It is an error for NOTATION to be used directly in a schema in element/attribute '/p1'";
ERROR_106 = "For element '/p1', the {content type} is mixed, then the {content type}'s particle must be emptiable";
ERROR_107 = "The content of complexType is EMPTY, but base is not empty or does not have emptiable particle.";
ERROR_108 = "The content type of the base type:'/p1' and derived type:'/p2' must both be mixed or element-only.";
ERROR_109 = "The content type is not a valid restriction of the content type of the base.";
ERROR_110 = "Derivation by extension or restriction is forbidden by either the base type '/p1' or the schema";
ERROR_111 = "The {item type definition} must have {variety} of atomic or union (where all member types must be atomic)";
ERROR_112 = "The {member type definitions} must all have {variety} of atomic or list";
ERROR_113 = "The group:'0' must contain (all | choice | sequence)";
ERROR_114 = "The attributeGroup:'0' must match (annotation?. ((attribute | attributeGroup)*, anyAttribute?))";
ERROR_115 = "The child of a model group definition must not specify either the minOccurs or maxOccurs attribute.";
ERROR_116 = "The /p1 -'/p2:/p3'- not found in the schema";
ERROR_117 = "A group whose content is 'all' must only appear as the content type of a complex type definition.";
ERROR_118 = "When a model group has {compositor} 'all' which constitutes the {content type} of a complex type, minOccurs=maxOccurs=1";
ERROR_119 = "In an 'all' schema component, the value of minOccurs/maxOccurs of an element must be '0' or '1'.";
ERROR_120 = "Circular attributeGroup reference -/p1- is disallowed outside <redefine>";
ERROR_121 = "Attribute '/p1' already defined in base and should not appear in derivation by extension.";
ERROR_122 = "The intensional intersection of {attributes wildcard}s must be expressible";
ERROR_123 = "Base type definition does not have any attributes";
ERROR_124 = "Attribute '/p1' has an inconsistent REQUIRED setting with that of the base";
ERROR_125 = "Type of attribute '/p1' must be validly derived from type of attribute in base";
ERROR_126 = "Attribute '/p1' is either not fixed, or has a different value from that of the base";
ERROR_127 = "Attribute '/p1' has invalid target namespace with respect to a base wildcard constraint or, base has no wildcard";
ERROR_128 = "An attribute wildcard is present in the derived type, but not in the base";
ERROR_129 = "The attribute wildcard in the derived type is not a valid subset of that in the base";
ERROR_130 = "Attribute '/p1' cannot modify the 'use' attribute in a derived type, if base attribute use is prohibited";
ERROR_131 = "Content of <all> is restricted to elements only. '/p1' encountered and ignored.";
ERROR_132 = "Redefined schema '/p1' has a different targetNameSpace '/p2'.";
ERROR_133 = "A simpleType child of a <redefine> must have a restriction element as a child";
ERROR_134 = "The base attribute of the restriction child of a simpleType, must be the same as the redefine simpleType's name attribute";
ERROR_135 = "A complexType child of a <redefine> must have a restriction or extension element as a grandchild";
ERROR_136 = "The base attribute of a restriction/extension must be the same as the complexType's name attribute in <redefine>";
ERROR_137 = "The group '/p1' which contains a reference to a group being redefined must have minOccurs = maxOccurs = 1";
ERROR_138 = "Could not find a declaration in the schema to be redefined corresponding to '/p1'";
ERROR_139 = "If a group child of a <redefine> element contains a group ref'ing itself, it must have exactly 1 reference.";
ERROR_140 = "If an attributeGroup of a <redefine> element contains a reference to itself, such reference must be exactly 1";
ERROR_141 = "The declaration for notation '/p1' is invalid";
ERROR_142 = "The notation declaration '/p1:/p2' is not found";
ERROR_143 = "More than one identity constraint named '/p1'.";
ERROR_144 = "The content of an identity constraint must match (annotation?, selector, field+)";
ERROR_145 = "Key reference declaration '/p1' refers to unknown key with name '/p2'.";
ERROR_146 = "Cardinality of fields for keyref '/p1' and key '/p2' must match.";
ERROR_147 = "Xpath expression is either missing or empty";
ERROR_148 = "The complexType has content, while base is empty";
ERROR_149 = "The {value constraint} of an attribute ref is not fixed or different from the fixed {value constraint} of '/p1'";
ERROR_150 = "The {type definition} for attribute '/p1=/p2' is or is derived from ID, and must not have {value constraint}";
ERROR_151 = "More than one attribute derived from type ID cannot appear in the same complex type - '/p1' ignored";
ERROR_152 = "More than one attribute derived from type ID cannot appear in the same attribute group - '/p1' ignored";
ERROR_153 = "'' is not a legal value for the targetNamespace attribute; the attribute must be absent or contain a nonempty value";
ERROR_154 = "/p1";
ERROR_155 = "An exception occurred! Type:/p1, Message:/p2";
ERROR_156 = "Invalid Redefine: '/p1' has already been included or redefined";
ERROR_157 = "Schema Representation Constraint: Namespace '/p1' is referenced without <import> declaration";
ERROR_158 = "An 'all' model group that's part of a complex type definition must constitute the entire content type of the definition";
ERROR_159 = "An <annotation> can only contain <appinfo> and <documentation> elements";
ERROR_160 = "Invalid facet name: /p1";
ERROR_161 = "The root element name of an XML Schema should be 'schema'.";
ERROR_164 = "Expected comment or CDATA";
ERROR_165 = "Expected an attribute name";
ERROR_166 = "Expected a notation name";
ERROR_167 = "Repetition of individual elements is not legal for mixed content models";
ERROR_168 = "Bad default attribute declaration";
ERROR_169 = "Expected default attribute declaration, assuming #IMPLIED ";
ERROR_170 = "Attribute list syntax error";
ERROR_171 = "Expected equal sign";
ERROR_172 = "Duplication attribute name";
ERROR_173 = "Bad ID, '/p1', for xml:lang attribute";
ERROR_174 = "Expected an element name";
ERROR_175 = "Must start with an XMLDecl";
ERROR_176 = "Comments must start with <!--";
ERROR_177 = "Invalid document structure";
ERROR_178 = "Expected a 'version=', 'encoding=', or 'standalone='";
ERROR_179 = "Bad XML version string";
ERROR_180 = "Unsupported XML version, '/p1'";
ERROR_181 = "Unterminated XML decl";
ERROR_182 = "Bad XML encoding declaration, '/p1'";
ERROR_183 = "Bad standalone declaration";
ERROR_184 = "Unterminated comment";
ERROR_185 = "Processing instruction name expected";
ERROR_186 = "Unterminated processing instruction";
ERROR_187 = "Invalid character (Unicode: 0x/p1)";
ERROR_188 = "Unexpected text before root element";
ERROR_189 = "Unterminated start tag, '/p1'";
ERROR_190 = "Expected an attribute value";
ERROR_191 = "Unterminated end tag";
ERROR_192 = "Expected type (CDATA, ID, NMTOKEN, ..), for attribute '/p1' of element '/p2'";
ERROR_193 = "Expected end of tag '/p1'";
ERROR_194 = "Expected tag name, comment, PI, or other markup";
ERROR_195 = "Not valid after content";
ERROR_196 = "Expected comment";
ERROR_197 = "Expected comment or processing instruction";
ERROR_198 = "Expected whitespace";
ERROR_199 = "No root element in DOCTYPE";
ERROR_200 = "Expected quoted string";
ERROR_201 = "Expected public id";
ERROR_202 = "Invalid character in public id (Unicode: 0x/p1)";
ERROR_203 = "Unterminated DOCTYPE declaration";
ERROR_204 = "Invalid character in internal subset (Unicode: 0x/p1)";
ERROR_205 = "Expected CDATA section";
ERROR_206 = "Invalid initial name character";
ERROR_207 = "Invalid name character";
ERROR_208 = "Unexpected whitespace";
ERROR_209 = "Invalid character in attribute value /p1 (Unicode: 0x/p2)";
ERROR_210 = "Expected a markup declaration";
ERROR_211 = "Text declaration not legal here";
ERROR_212 = "Conditional section in internal subset";
ERROR_213 = "Expected parameter entity name";
ERROR_214 = "Unterminated entity declaration, '/p1'";
ERROR_215 = "Invalid character reference";
ERROR_216 = "Unterminated character reference";
ERROR_217 = "Expected entity name for reference";
ERROR_218 = "Entity '/p1' was not found";
ERROR_219 = "Unparsed entity references, '/p1', not valid here";
ERROR_220 = "Unterminated entity reference";
ERROR_221 = "Recursive entity expansion";
ERROR_222 = "Partial markup in entity value";
ERROR_223 = "Unterminated element declaration, '/p1'";
ERROR_224 = "Expected content specification expression for element '/p1'";
ERROR_225 = "Expected asterisk";
ERROR_226 = "Unterminated Content model";
ERROR_227 = "Expected system id";
ERROR_228 = "Expected system or public id";
ERROR_229 = "Unterminated notation declaration";
ERROR_230 = "Expected ',', '|', or ')' characters";
ERROR_231 = "Expected '|' or ')' characters";
ERROR_232 = "Expected ',' or ')' characters or close parenthesis in content model of element '/p1'";
ERROR_233 = "Expected enumeration value for attribute '/p1'";
ERROR_234 = "Expected | enumeration separator, or closing paren";
ERROR_235 = "Unterminated entity literal";
ERROR_236 = "There are more end tags than start tags";
ERROR_237 = "Expected an open parenthesis";
ERROR_238 = "The attribute '/p1' is already used in element '/p2'";
ERROR_239 = "A '<' character cannot be used in attribute '/p1', except through &lt;";
ERROR_240 = "A leading surrogate character was not followed by a legal second character";
ERROR_241 = "Expected ']]>' to end a conditional section";
ERROR_242 = "Expected INCLUDE or IGNORE here";
ERROR_243 = "Expected [ to follow INCLUDE or IGNORE";
ERROR_244 = "Expected a TextDecl here: <?xml ....";
ERROR_245 = "Expected a XMLDecl here: <?xml ....";
ERROR_246 = "Unexpected end of entity /p1";
ERROR_247 = "A PE propagated out of the int/ext subset, discarding extra text";
ERROR_248 = "An extra ] character was found an ignored";
ERROR_249 = "PE refs are not allowed inside markup in the internal subset";
ERROR_250 = "An entity propagated out of the content section into Miscellaneous";
ERROR_251 = "Expected &# to be followed by a numeric character value";
ERROR_252 = "Expected an open bracket ('[') here";
ERROR_253 = "The sequence ']]>' is not allowed in character data";
ERROR_254 = "Illegal sequence '--' in comment";
ERROR_255 = "Unterminated CDATA section";
ERROR_256 = "Expected NDATA";
ERROR_257 = "NDATA is not legal for parameter entities";
ERROR_258 = "Hex radix character refs must use 'x', not 'X'";
ERROR_259 = "'/p1' has already been set. Ignoring redundant setting";
ERROR_260 = "The XMLDecl strings must be in the order: version, encoding, standalone";
ERROR_261 = "External entities cannot be referred to from attribute values";
ERROR_262 = "The XML or Text decl must start with '<?xml ', not '<?XML '";
ERROR_263 = "Expected a literal entity value or PUBLIC/SYSTEM id";
ERROR_264 = "'/p1' is not a valid digit for the indicated radix";
ERROR_265 = "The input ended before all started tags were ended. Last tag started was '/p1'";
ERROR_266 = "The content model for element '/p1' is ambiguous";
ERROR_267 = "Nested CDATA sections are not allowed";
ERROR_268 = "The prefix '/p1' has not been mapped to any URI";
ERROR_269 = "The start and the end tag were in the different entities";
ERROR_270 = "The main XML document cannot be empty";
ERROR_271 = "CDATA is not allowed outside the root element";
ERROR_272 = "Only numeric character entities or special character entities are legal here";
ERROR_273 = "Got an unexpected trailing surrogate character";
ERROR_274 = "No processing instruction starts with 'xml'";
ERROR_275 = "The XML or Text declaration must start at line/column 1/1";
ERROR_276 = "The 'version=' string is required in an XMLDecl";
ERROR_277 = "The 'standalone=' string is only allowed in the main XML entity";
ERROR_278 = "The 'encoding=' string is required in an Text Decl";
ERROR_279 = "When namespaces are enabled, a name can have only one colon character";
ERROR_280 = "When namespaces are enabled, the colon cannot be the first or last character";
ERROR_281 = "Colons are not allowed in this name when namespaces are enabled";
ERROR_282 = "A system exception occurred during processing";
ERROR_283 = "An exception occurred! Type:/p1, Message:/p2";
ERROR_284 = "Unexpected end of file exception. Message: /p1";
ERROR_285 = "UnexpectedError";
ERROR_286 = "The schemaLocation attribute does not contain pairs of values.";
ERROR_287 = "Internal error: don't have a GrammarResolver for TraverseSchema";
ERROR_288 = "Fatal error encountered during schema scan";

VALIDITY_1 = "Unknown element '/p1'";
VALIDITY_2 = "Attribute '/p1' not defined";
VALIDITY_3 = "Notation '/p1' was referenced but never declared";
VALIDITY_4 = "Root element different from DOCTYPE";
VALIDITY_5 = "Required attribute '/p1' was not provided";
VALIDITY_6 = "Element '/p1' is not valid for content model: '/p2'";
VALIDITY_7 = "ID attributes must be #IMPLIED or #REQUIRED";
VALIDITY_8 = "This type of attribute cannot have an empty value";
VALIDITY_9 = "Element '/p1' has already been declared";
VALIDITY_10 = "Element '/p1' has more than one ID attribute";
VALIDITY_11 = "ID '/p1' has already been used";
VALIDITY_12 = "ID attribute '/p1' was referenced but never declared";
VALIDITY_13 = "Attribute '/p1' refers to an unknown notation '/p2'";
VALIDITY_14 = "Element '/p1' was used in the DOCTYPE but never declared";
VALIDITY_15 = "Empty content not valid for content model: '/p1'";
VALIDITY_16 = "Attribute '/p1' is not declared for element '/p2'";
VALIDITY_17 = "Attributes of type ENTITY/ENTITIES must refer to an external, unparsed entity";
VALIDITY_18 = "Attribute '/p1' refers to an unknown entity '/p2'";
VALIDITY_19 = "Not enough elements to match content model : '/p1'";
VALIDITY_20 = "No character data is allowed by content model";
VALIDITY_21 = "Attribute '/p1' does not match its defined enumeration or notation list";
VALIDITY_22 = "The values for attribute '/p1' must be names or name tokens";
VALIDITY_23 = "Attribute '/p1' does not support multiple values";
VALIDITY_24 = "Attribute '/p1' has a value, '/p2', that does not match its #FIXED value, '/p3'";
VALIDITY_25 = "Element types cannot be duplicated in Mixed content models";
VALIDITY_26 = "No validator for datatype /p1";
VALIDITY_27 = "Incorrect datatype: /p1";
VALIDITY_28 = "/p1 is not a datatype.";
VALIDITY_29 = "The content attribute must be 'textOnly' if you specify a type attribute.";
VALIDITY_30 = "/p1 is unsupported";
VALIDITY_31 = "Nested Element decls only allowed in elementOnly content";
VALIDITY_32 = "Element references only allowed in mixed or elementOnly content";
VALIDITY_33 = "/p1 only allowed in elementOnly content.";
VALIDITY_34 = "/p1 not allowed if the order is all.";
VALIDITY_35 = "Datatype qualifiers can only be used if you specify a type attribute.";
VALIDITY_36 = "The datatype qualifier /p1 is not supported.";
VALIDITY_37 = "Error: /p1 content must be one of element, group, modelGroupRef. Saw /p2";
VALIDITY_38 = "Unknown base type /p1 for type /p2.";
VALIDITY_39 = "Can only have one of type and ref attributes.";
VALIDITY_40 = "A </p1> declaration that has a ref attribute, cannot have child content.";
VALIDITY_41 = "Incorrect type for /p1's default value: /p2";
VALIDITY_42 = "Illegal content /p1 in attribute group";
VALIDITY_43 = "Value of /p1 is not an integer.";
VALIDITY_44 = "Datatype error: Type:/p1, Message:/p2.";
VALIDITY_45 = "Schema error: Type:/p1, Message:/p2";
VALIDITY_46 = "The type of the element has already been declared.";
VALIDITY_47 = "Prohibited Attribute is found.";
VALIDITY_48 = "Illegal xml:space declaration.";
VALIDITY_49 = "/p1 is not a boolean.";
VALIDITY_50 = "/p1 is not a decimal.";
VALIDITY_51 = "Facets are inconsistent with base type.";
VALIDITY_52 = "Illegal value /p1 for facet /p2.";
VALIDITY_53 = "Illegal Facet for decimal type.";
VALIDITY_54 = "Unknown Facet: /p1.";
VALIDITY_55 = "Invalid value for Enum constant: /p1.";
VALIDITY_56 = "/p1 is out of bounds:[ /p2 /p4 X  /p5 /p3 ].";
VALIDITY_57 = "/p1 is not one of the specified enum values.";
VALIDITY_58 = "/p1 is not an integer.";
VALIDITY_59 = "Illegal Facet for Integer type.";
VALIDITY_60 = "/p1 is not a double.";
VALIDITY_61 = "Illegal Facet for Real type.";
VALIDITY_62 = "Scale Facet must be less than or equal to Precision Facet";
VALIDITY_63 = "/p1 has exceeded the precision Facet /p2";
VALIDITY_64 = "/p1 has exceeded the scale Facet /p2";
VALIDITY_65 = "/p1 is not a float.";
VALIDITY_66 = "Can't get back Schema document's root element /p1.";
VALIDITY_67 = "Schema in /p1 has a different target namespace from the one specified in the instance document /p2.";
VALIDITY_68 = "In element /p1: Can not have element children within a simple type content.";
VALIDITY_69 = "This element /p1 has a simpletype but no datatype validator was found.";
VALIDITY_70 = "There is no Grammar for uri: /p1.";
VALIDITY_71 = "/p1";
VALIDITY_72 = "xsi:nil must not be specified for the element /p1 with nillable equals false";
VALIDITY_73 = "Element /p1 with attribute xsi:nil=true must be empty";
VALIDITY_74 = "Content of element '/p1' is different from the fixed attribute value in the element's schema declaration.";
VALIDITY_75 = "No datatype validator was found for this attribute /p1.";
VALIDITY_76 = "Schema error during parsing";
VALIDITY_77 = "Element '/p1' should be qualified";
VALIDITY_78 = "Element '/p1' should be un-qualified";
VALIDITY_79 = "Reference to external entity declaration '/p1' is not allowed in a standalone document.";
VALIDITY_80 = "Attribute '/p1' for element '/p2' has a default value and must be specified in a standalone document.";
VALIDITY_81 = "Attribute '/p1' must not be changed by normalization in a standalone document.";
VALIDITY_82 = "White space must not occur between externally declared elements with element content in a standalone document.";
VALIDITY_83 = "Entity '/p1' was not found";
VALIDITY_84 = "Partial markup in parameter entity replacement text.";
VALIDITY_85 = "Failed to validate '/p1'";
VALIDITY_86 = "'/p1' and '/p2' violate the Unique Particle Attribution rule";
VALIDITY_87 = "Abstract type '/p1' should not be used in xsi:type";
VALIDITY_88 = "A member of abstract element /p1 substitution group must be specified";
VALIDITY_89 = "Element /p1 is declared with a type that is abstract.  Use xsi:type to specify a non-abstract type";
VALIDITY_90 = "Unresolved type '/p1' found in xsi:type handling";
VALIDITY_91 = "Type '/p1' that is used in xsi:type is not derived from the type of element '/p2'";
VALIDITY_92 = "Element '/p1' has blocking constraint and does not permit substitution";
VALIDITY_93 = "Attribute '/p1' should be qualified";
VALIDITY_94 = "Attribute '/p1' should be un-qualified";
VALIDITY_95 = "Field matches more than one value within the scope of its selector; fields must match unique values";
VALIDITY_96 = "Internal identity constraint error; unknown field.";
VALIDITY_97 = "Identity-constraint 4.2.1: element '/p1' has a key with no value.";
VALIDITY_98 = "Not enough values specified for <unique> identity constraint for element '/p1'.";
VALIDITY_99 = "Not enough values specified for <key name=/p2> identity constraint for element '/p1'.";
VALIDITY_100 = "Not enough values specified for <keyref name=/p2> identity constraint for element '/p1'.";
VALIDITY_101 = "Identity-constraint 4.2.3: element '/p1' has a key that matches an element that has nillable set to true.";
VALIDITY_102 = "Duplicate unique value declared for identity constraint of element '/p1'.";
VALIDITY_103 = "Duplicate key value declared for identity constraint of element '/p1'.";
VALIDITY_104 = "The keyref '/p1' refers to a key/unique that is out of scope.";
VALIDITY_105 = "The key for identity constraint of element '/p1' is not found.";

EXCEPTION_1 = "Warning: The primary document entity could not be opened. Id=/p1";
EXCEPTION_2 = "Warning: No caching of grammar set, a grammar with same key found in the cache pool.";
EXCEPTION_5 = "The index is beyond the array bounds ";
EXCEPTION_6 = "The new size is less than the old one";
EXCEPTION_7 = "The index given was beyond the max attribute index";
EXCEPTION_8 = "The passed AttTypes value is not known";
EXCEPTION_9 = "The passed DefAttTypes value is not known";
EXCEPTION_10 = "The bit index was beyond the set size";
EXCEPTION_11 = "The bit sets are not of the same size";
EXCEPTION_12 = "The buffer manager cannot provide any more buffers";
EXCEPTION_13 = "The passed buffer was not found in this manager's pool";
EXCEPTION_14 = "The pointer has not been set";
EXCEPTION_15 = "The binary operation node had a unary node type";
EXCEPTION_16 = "The content type must be mixed or children";
EXCEPTION_17 = "PCDATA nodes are not valid here";
EXCEPTION_18 = "The /p1 operation is invalid for the spec type";
EXCEPTION_19 = "The unary operation node had a binary node type";
EXCEPTION_20 = "Unknown content model type";
EXCEPTION_21 = "Unknown content spec type";
EXCEPTION_22 = "The parent element has no content spec node";
EXCEPTION_23 = "The spec type is not valid for /p1";
EXCEPTION_24 = "The creation reason enum has an unknown value";
EXCEPTION_25 = "The element stack is empty";
EXCEPTION_26 = "The element stack index given was beyond the stack top";
EXCEPTION_27 = "The element stack was already empty when a pop request occurred";
EXCEPTION_28 = "A parent operation was requested, but only one element is on the stack";
EXCEPTION_29 = "The enumerator contains no more elements";
EXCEPTION_30 = "Could not open file: /p1";
EXCEPTION_31 = "Could not query the current file position";
EXCEPTION_32 = "Could not close the file";
EXCEPTION_33 = "Could not seek to end of file";
EXCEPTION_34 = "Could not seek to required position in file";
EXCEPTION_35 = "Could not duplicate the handle";
EXCEPTION_36 = "Could not read data from file";
EXCEPTION_37 = "Could not write data to file";
EXCEPTION_38 = "Could not reset file to beginning";
EXCEPTION_39 = "Could not ascertain the file size";
EXCEPTION_40 = "Could not determine base pathname of the file";
EXCEPTION_41 = "The base path had too few levels to weave in relative part";
EXCEPTION_42 = "Parse may not be called while parsing";
EXCEPTION_43 = "A DOCTYPE was seen but the installed validator does not understand DTDs";
EXCEPTION_44 = "Could not open DTD file '/p1'";
EXCEPTION_45 = "Could not open external entity '/p1'";
EXCEPTION_46 = "The end of input was not expected";
EXCEPTION_47 = "The hash modulus cannot be zero";
EXCEPTION_48 = "Hashing the key returned an invalid bad hash value";
EXCEPTION_49 = "The key '/p1' could not be found in the hash table";
EXCEPTION_50 = "Could not create mutex";
EXCEPTION_51 = "Could not close mutex";
EXCEPTION_52 = "Could not lock mutex";
EXCEPTION_53 = "Could not unlock mutex";
EXCEPTION_54 = "Could not destroy mutex";
EXCEPTION_55 = "Error on /p1 NetAccessor. Msg: /p2";
EXCEPTION_56 = "The NetAccessor could not be initialized. Error=/p1";
EXCEPTION_57 = "The host/address '/p1' could not be resolved";
EXCEPTION_58 = "Could not create the socket for URL '/p1'. Error=/p2";
EXCEPTION_59 = "Could not connect to the socket for URL '/p1'. Error=/p2";
EXCEPTION_60 = "Could not write to the socket. Error=/p1";
EXCEPTION_61 = "Could not read from the socket. Error=/p1";
EXCEPTION_62 = "The element /p1 already exists";
EXCEPTION_63 = "Hashing the key returned an invalid bad hash value";
EXCEPTION_64 = "The passed id is not valid for this pool";
EXCEPTION_65 = "The modulus value cannot be zero";
EXCEPTION_66 = "The indicated reader id was never found";
EXCEPTION_67 = "The auto encoding enum has an unknown value";
EXCEPTION_68 = "Could not decode first line of entity: /p1";
EXCEPTION_69 = "End of input was hit in the middle of a multibyte sequence";
EXCEPTION_70 = "The current transcoding service does not support source offset information";
EXCEPTION_71 = "EBCDIC files must provide an encoding= string";
EXCEPTION_72 = "The primary document entity could not be opened. Id=/p1";
EXCEPTION_73 = "Unbalanced start/end tags found, cannot continue";
EXCEPTION_74 = "The call to scanNext() is illegal at this time";
EXCEPTION_75 = "The index is past the top of stack";
EXCEPTION_76 = "The stack is empty, cannot access members";
EXCEPTION_77 = "The target buffer cannot have a max size of zero";
EXCEPTION_78 = "The given radix is not supported. Use 2, 8, 10, or 16";
EXCEPTION_79 = "The target buffer is too small to accept the results";
EXCEPTION_80 = "The start index is past the end of the string";
EXCEPTION_81 = "The represented value overflowed the output binary result";
EXCEPTION_82 = "Could not write to standard err";
EXCEPTION_83 = "Could not write to standard out";
EXCEPTION_84 = "Could not write to console";
EXCEPTION_85 = "String pool id was not legal";
EXCEPTION_86 = "Could not create a default transcoder";
EXCEPTION_87 = "The maximum size to xlat is larger than the declared block size";
EXCEPTION_88 = "Unicode char 0x/p1 is not representable in encoding /p2";
EXCEPTION_89 = "Character /p1 is not valid for encoding /p2";
EXCEPTION_90 = "The requested block size is not equal to the size set during construction";
EXCEPTION_91 = "An invalid multi-byte source text sequence was encountered";
EXCEPTION_92 = "/p1 is not a valid value for encoding /p2";
EXCEPTION_93 = "Leading surrogate was not followed by trailing";
EXCEPTION_94 = "Could not create a converter for encoding: /p1";
EXCEPTION_95 = "The URL was not correctly formed";
EXCEPTION_96 = "The URL used an unsupported protocol";
EXCEPTION_97 = "Unsupported URL protocol: '/p1'";
EXCEPTION_98 = "Only localhost is supported at this time";
EXCEPTION_99 = "No protocol prefix present";
EXCEPTION_100 = "Expected // after protocol";
EXCEPTION_101 = "% must be followed by two hex digits";
EXCEPTION_102 = "Unterminated host component";
EXCEPTION_103 = "The base part of the URL cannot be relative";
EXCEPTION_104 = "The base part has too few levels to weave in relative part";
EXCEPTION_105 = "The port field must be a 16 bit decimal number";
EXCEPTION_106 = "The passed index is past the end of the vector";
EXCEPTION_107 = "The element id was invalid";
EXCEPTION_108 = "When reusing the Grammar, no internal subset is allowed";
EXCEPTION_109 = "The passed recognizer encoding was not known";
EXCEPTION_110 = "Wrong character";
EXCEPTION_111 = "Invalid reference number";
EXCEPTION_112 = "A character is required after \\ ";
EXCEPTION_113 = "'?' is not expected.  '(?:' or '(?=' or '(?!' or '(?<' or '(?#' or '(?>'?";
EXCEPTION_114 = "'(?<=' or '(?<!' is expected";
EXCEPTION_115 = "A comment is not terminated";
EXCEPTION_116 = "')' is expected";
EXCEPTION_117 = "Unexpected end of the pattern in a modifier group";
EXCEPTION_118 = "':' is expected";
EXCEPTION_119 = "Unexpected end of the pattern in a conditional group";
EXCEPTION_120 = "A back reference or an anchor or a lookahead or a lookbehind is expected in a conditional pattern";
EXCEPTION_121 = "There are more than three choices in a conditional group";
EXCEPTION_122 = "A character in U+0040-U+005f must follow \\c";
EXCEPTION_123 = "A Category character or '{' is required";
EXCEPTION_124 = "A property name is not closed by '}'";
EXCEPTION_125 = "Unexpected meta character";
EXCEPTION_126 = "Unknown property";
EXCEPTION_127 = "A POSIX character class must be closed by ':]'";
EXCEPTION_128 = "Unexpected end of the pattern in a character class";
EXCEPTION_129 = "Unknown name for a POSIX character class";
EXCEPTION_130 = "'-' is invalid here";
EXCEPTION_131 = "']' is expected";
EXCEPTION_132 = "'[' is invalid in a character class.  Write '\\['";
EXCEPTION_133 = "']' is invalid in a character class.  Write '\\]'";
EXCEPTION_134 = "='[' is expected";
EXCEPTION_135 = "')' or '-[' or '+[' or '&[' is expected";
EXCEPTION_136 = "The range end code point '/p1' is less than the start code point '/p2'";
EXCEPTION_137 = "Invalid Unicode hex notation";
EXCEPTION_138 = "Overflow in a hex notation";
EXCEPTION_139 = "'\\x{' must be closed by '}'";
EXCEPTION_140 = "Invalid Unicode code point";
EXCEPTION_141 = "An anchor must not be here";
EXCEPTION_142 = "This expression is not supported in the current option setting";
EXCEPTION_143 = "Regular expression: unrecognized character '/p1' in charRange";
EXCEPTION_144 = "A schema was seen but the installed validator does not understand schema";
EXCEPTION_145 = "The /p1 node type is not valid for copy";
EXCEPTION_146 = "SubstitutionGroupComparator has no grammar resolver";
EXCEPTION_147 = "Length Value '/p1' is invalid";
EXCEPTION_148 = "maxLength Value '/p1' is invalid";
EXCEPTION_149 = "minLength Value '/p1' is invalid";
EXCEPTION_150 = "Length Value '/p1' must be a nonNegativeInteger";
EXCEPTION_151 = "maxLength Value '/p1' must be a nonNegativeInteger";
EXCEPTION_152 = "minLength Value '/p1' must be a nonNegativeInteger";
EXCEPTION_153 = "It is an error for both length and maxLength to be members of facets";
EXCEPTION_154 = "It is an error for both length and minLength to be members of facets";
EXCEPTION_155 = "Value of maxLength '/p1' must be greater than the value of minLength '/p2'";
EXCEPTION_156 = "Only constraining facet in boolean datatype is PATTERN";
EXCEPTION_157 = "Invalid Facet Tag '/p1'";
EXCEPTION_158 = "Value of Length '/p1' must be equal to the base Length '/p2'";
EXCEPTION_159 = "Value of minLength '/p1' must be greater than or equal to the base minLength '/p2'";
EXCEPTION_160 = "Value of minLength '/p1' must be less than or equal to the base maxLength '/p2'";
EXCEPTION_161 = "Value of maxLength '/p1' must be less than or equal to the base maxLength '/p2'";
EXCEPTION_162 = "Value of maxLength '/p1' must be greater than or equal to the base minLength '/p2'";
EXCEPTION_163 = "Value of enumeration = '/p1' must be from the value space of base";
EXCEPTION_164 = "Value of whitespace '/p1' must be one of 'preserve', 'replace', 'collapse'";
EXCEPTION_165 = "It is an error if whiteSpace = 'preserve' or 'replace' and base.whiteSpace = 'collapse'.";
EXCEPTION_166 = "It is an error if whiteSpace = 'preserve' and base.whiteSpace = 'replace'.";
EXCEPTION_167 = "MaxInclusive '/p1' is invalid";
EXCEPTION_168 = "MaxExclusive '/p1' is invalid";
EXCEPTION_169 = "MinInclusive '/p1' is invalid";
EXCEPTION_170 = "MinExclusive '/p1' is invalid";
EXCEPTION_171 = "TotalDigit Value '/p1' is invalid";
EXCEPTION_172 = "FractionDigit Value '/p1' is invalid";
EXCEPTION_173 = "TotalDigit Value '/p1' must be a nonNegativeInteger";
EXCEPTION_174 = "FractionDigit Value '/p1' must be a nonNegativeInteger";
EXCEPTION_175 = "It is an error for both maxInclusive and maxExclusive to be specified for the same datatype";
EXCEPTION_176 = "It is an error for both minInclusive and minExclusive to be specified for the same datatype";
EXCEPTION_177 = "maxExclusive value '/p1' must be greater than minExclusive value '/p2'";
EXCEPTION_178 = "maxExclusive value '/p1' must be greater than minInclusive value '/p2'";
EXCEPTION_179 = "maxInclusive value '/p1' must be greater than minExclusive value '/p2'";
EXCEPTION_180 = "maxInclusive value '/p1' must be greater than minInclusive value '/p2'";
EXCEPTION_181 = "TotalDigit value '/p1' must be greater than FractionDigit value '/p2'";
EXCEPTION_182 = "maxInclusive value '/p1' must be less than base's maxExclusive value '/p2'";
EXCEPTION_183 = "maxInclusive value '/p1' must be less than or equal to base's maxInclusive value '/p2'";
EXCEPTION_184 = "maxInclusive value '/p1' must be greater than or equal to base's minInclusive value '/p2'";
EXCEPTION_185 = "maxInclusive value '/p1' must be greater than base's minExclusive value '/p2'";
EXCEPTION_186 = "maxExclusive value '/p1' must be less than or equal to base's maxExclusive value '/p2'";
EXCEPTION_187 = "maxExclusive value '/p1' must be less than or equal to base's maxInclusive value '/p2'";
EXCEPTION_188 = "maxExclusive value '/p1' must be greater than base's minInclusive value '/p2'";
EXCEPTION_189 = "maxExclusive value '/p1' must be greater than base's minExclusive value '/p2'";
EXCEPTION_190 = "minExclusive value '/p1' must be less than base's maxExclusive value '/p2'";
EXCEPTION_191 = "minExclusive value '/p1' must be less than or equal to base's maxInclusive value '/p2'";
EXCEPTION_192 = "minExclusive value '/p1' must be greater than base's minInclusive value '/p2'";
EXCEPTION_193 = "minExclusive value '/p1' must be greater than base's minExclusive value '/p2'";
EXCEPTION_194 = "minInclusive value '/p1' must be less than base's maxExclusive value '/p2'";
EXCEPTION_195 = "minInclusive value '/p1' must be less than or equal to base's maxInclusive value '/p2'";
EXCEPTION_196 = "minInclusive value '/p1' must be greater than or equal to base's minInclusive value '/p2'";
EXCEPTION_197 = "minInclusive value '/p1' must be greater than base's minExclusive value '/p2'";
EXCEPTION_198 = "maxInclusive value '/p1' must be from the base's value space";
EXCEPTION_199 = "maxExclusive value '/p1' must be from the base's value space";
EXCEPTION_200 = "minInclusive value '/p1' must be from the base's value space";
EXCEPTION_201 = "minExclusive value '/p1' must be from the base's value space";
EXCEPTION_202 = "totalDigit value '/p1' must be less than or equal to base's totalDigit value '/p2'";
EXCEPTION_203 = "fractDigit value '/p1' must be less than or equal to base's totalDigit value '/p2'";
EXCEPTION_204 = "fractDigit value '/p1' must be less than or equal to base's fractDigit value '/p2'";
EXCEPTION_205 = "maxInclusive '/p1' must be equal to base's maxInclusive '/p2' , fixed";
EXCEPTION_206 = "maxExclusive '/p1' must be equal to base's maxExclusive '/p2' , fixed";
EXCEPTION_207 = "minInclusive '/p1' must be equal to base's minInclusive '/p2' , fixed";
EXCEPTION_208 = "minExclusive '/p1' must be equal to base's minExclusive '/p2' , fixed";
EXCEPTION_209 = "totalDigit '/p1' must be equal to base's totalDigit '/p2'  , fixed";
EXCEPTION_210 = "fractDigit '/p1' must be equal to base's fractDigit '/p2' , fixed";
EXCEPTION_211 = "maxLen '/p1' must be equal to base's maxLen '/p2' , fixed";
EXCEPTION_212 = "minLen '/p1' must be equal to base's minLen '/p2' , fixed";
EXCEPTION_213 = "len '/p1' must be equal to base's len '/p2' , fixed";
EXCEPTION_214 = "whitespace '/p1' must be equal to base's whitespace '/p2' , fixed";
EXCEPTION_215 = "internal Error: fixed";
EXCEPTION_216 = "Null base validator in List ";
EXCEPTION_217 = "Null member type validators in Union ";
EXCEPTION_218 = "Null base validator in Union";
EXCEPTION_219 = "Union's base validator's type '/p1' must be union too ";
EXCEPTION_220 = "Value '/p1' does not match regular expression facet '/p2'";
EXCEPTION_221 = "Value '/p1' is not encoded in Base64 ";
EXCEPTION_222 = "Value '/p1' is not encoded in HexBin ";
EXCEPTION_223 = "Value '/p1' with length '/p2' exceeds maximum length facet of '/p3' ";
EXCEPTION_224 = "Value '/p1' with length '/p2' is less than minimum length facet of '/p3' ";
EXCEPTION_225 = "Value '/p1' with length '/p2' is not equal to length facet of '/p3' ";
EXCEPTION_226 = "Value '/p1' is not in enumeration ";
EXCEPTION_227 = "Value '/p1' with total digits '/p2' exceeds total digit facet of '/p3' ";
EXCEPTION_228 = "Value '/p1' with fraction digits '/p2' exceeds fraction digit facet of '/p3' ";
EXCEPTION_229 = "Value '/p1' must be less than or equal to MaxInclusive '/p2' ";
EXCEPTION_230 = "Value '/p1' must be less than MaxExclusive '/p2' ";
EXCEPTION_231 = "Value '/p1' must be greater than or equal to MinInclusive '/p2' ";
EXCEPTION_232 = "Value '/p1' must be greater than MinExclusive '/p2' ";
EXCEPTION_233 = "Value '/p1' is not whitespace replaced ";
EXCEPTION_234 = "Value '/p1' is not a whitespace collapsed ";
EXCEPTION_235 = "Value '/p1' is not valid NCName ";
EXCEPTION_236 = "Value '/p1' is not valid Name ";
EXCEPTION_237 = "ID '/p1' is not unique ";
EXCEPTION_238 = "Value '/p1' is not valid ENTITY ";
EXCEPTION_239 = "Value '/p1' is not valid QName ";
EXCEPTION_240 = "NOTATION '/p1' must be a valid QName ";
EXCEPTION_241 = "Value '/p1' does not match any member types (of the union) ";
EXCEPTION_242 = "Value '/p1' is NOT a valid URI ";
EXCEPTION_243 = " Empty string encountered.";
EXCEPTION_244 = " String contains whitespaces only.";
EXCEPTION_245 = " More than one decimal points encountered.";
EXCEPTION_246 = " Invalid chars encountered.";
EXCEPTION_247 = " Null pointer encountered.";
EXCEPTION_248 = " Cannot construct URI with null/empty '/p1' ";
EXCEPTION_249 = " '/p1', '/p2' can only be set for a generic URI! ";
EXCEPTION_250 = " '/p1' contains invalid escape sequence '/p2'";
EXCEPTION_251 = " '/p1' contains invalid char '/p2'";
EXCEPTION_252 = " '/p1' can not be set to null ";
EXCEPTION_253 = " '/p1' is NOT conformance '/p2' ";
EXCEPTION_254 = " No scheme found in URI";
EXCEPTION_255 = " '/p1', '/p2' may not be specified if host is not specified ";
EXCEPTION_256 = " '/p1', '/p2' may not be specified if path is not specified ";
EXCEPTION_257 = " '/p1', '/p2' cannot be specified in path";
EXCEPTION_258 = " Port no '/p1' shall be in (0, 65535) ";
EXCEPTION_259 = " Value '/p1' shall be greater than the max Negative value '/p2' ";
EXCEPTION_260 = " Value '/p1' shall be less than the max Negative value '/p2' ";
EXCEPTION_261 = " Value '/p1' shall be in the range of '/p2', '/p3' ";
EXCEPTION_262 = " Type '/p1' is invalid: internal error ";
EXCEPTION_263 = " Value '/p1' shall have exponent. ";
EXCEPTION_264 = "A result is not set.";
EXCEPTION_265 = "CompactRanges - Internal Error";
EXCEPTION_266 = "Merge Ranges - Mismatched type";
EXCEPTION_267 = "SubtractRanges - Internal Error";
EXCEPTION_268 = "IntersectRanges - Internal Error";
EXCEPTION_269 = "ComplementRanges - Argument must be a RangeToken";
EXCEPTION_270 = "Invalid category name: /p1";
EXCEPTION_271 = "Keyword '/p1' not found";
EXCEPTION_272 = "Reference no must be more than zero";
EXCEPTION_273 = "Unknown option: /p1";
EXCEPTION_274 = "Unknown token type";
EXCEPTION_275 = "Failed to get RangeToken for: /p1";
EXCEPTION_276 = "Not supported";
EXCEPTION_277 = "Invalid child index";
EXCEPTION_278 = "Invalid quantifier in '/p1'";
EXCEPTION_279 = "Enabling the NEL option can only be called once per process.";
EXCEPTION_280 = "/p1";
EXCEPTION_281 = "operator new fails.  Possibly running Of memory";
EXCEPTION_282 = "Operation is not allowed";
EXCEPTION_283 = "Selectors cannot select attributes";
EXCEPTION_284 = "Not allowed to have '|' at the beginning of an xpath value";
EXCEPTION_285 = "Not allowed to have '||' in an xpath value";
EXCEPTION_286 = "Missing attribute name in xpath";
EXCEPTION_287 = "Expected xpath token 'NAMETEST_QNAME' or 'NAMETEST_ANY' or 'NAMETEST_NAMESPACE'";
EXCEPTION_288 = "Prefix '/p1' not bound to namespace URI in an xpath value";
EXCEPTION_289 = "Not allowed to have double colon in the xpath expression";
EXCEPTION_290 = "Expected step following token 'AXISNAME_CHILD::'";
EXCEPTION_291 = "Expected step following '//' in xpath";
EXCEPTION_292 = "Expected step following '/' in xpath";
EXCEPTION_293 = "'/' not allowed after '//' in xpath";
EXCEPTION_294 = "'//' only allowed after '.' at the beginning of an xpath";
EXCEPTION_295 = "Not allowed to have '/' at the beginning of an xpath value";
EXCEPTION_296 = "Not allowed to select the root of an xpath";
EXCEPTION_297 = "Empty xpath expression";
EXCEPTION_298 = "The xpath expression cannot end with '|'";
EXCEPTION_299 = "Invalid character following '.' in xpath";
EXCEPTION_300 = "XPath token not supported";
EXCEPTION_301 = "Find a solution!";
EXCEPTION_302 = "buffer not initialized yet!";
EXCEPTION_303 = "'T' is missing! '/p1' ";
EXCEPTION_304 = "invalid gDay! '/p1' ";
EXCEPTION_305 = "invalid gMonth! '/p1' ";
EXCEPTION_306 = "invalid gMonthDay! '/p1' ";
EXCEPTION_307 = "Duration shall start with '-' or 'P'! '/p1' ";
EXCEPTION_308 = "Duration shall always have 'P'! '/p1' ";
EXCEPTION_309 = "'-' can only appear at first! '/p1' ";
EXCEPTION_310 = "Duration has invalid stuff before 'T'! '/p1' ";
EXCEPTION_311 = "Duration has no time elements after 'T'! '/p1' ";
EXCEPTION_312 = "Duration shall have at least element ! '/p1' ";
EXCEPTION_313 = "Incomplete Date ! '/p1' ";
EXCEPTION_314 = "Invalid Date ! '/p1' ";
EXCEPTION_315 = "Incomplete Time ! '/p1' ";
EXCEPTION_316 = "Invalid Time ! '/p1' ";
EXCEPTION_317 = "ms shall be present once '.' is present ! '/p1' ";
EXCEPTION_318 = "Incomplete YearMonth! '/p1' ";
EXCEPTION_319 = "Year separator is missing or misplaced ! '/p1' ";
EXCEPTION_320 = "Year must have 'CCYY' format ! '/p1' ";
EXCEPTION_321 = "Invalid leading zero in year! '/p1' ";
EXCEPTION_322 = "no month in YearMonth ! '/p1' ";
EXCEPTION_323 = "TimeZone is expected ! '/p1' ";
EXCEPTION_324 = "Expecting nothing after 'Z'! '/p1' ";
EXCEPTION_325 = "Invalid TimeZone! '/p1' ";
EXCEPTION_326 = "The year (0000) is an illegal year value! '/p1' ";
EXCEPTION_327 = "The month must have values 1 to 12! '/p1' ";
EXCEPTION_328 = "The day must have values 1 to 31! '/p1' ";
EXCEPTION_329 = "Hour must have values 0-23! '/p1' ";
EXCEPTION_330 = "Minute must have values 0-59! '/p1' ";
EXCEPTION_331 = "Second must have values 0-60! '/p1' ";
EXCEPTION_332 = "Minute must have values 0-59! '/p1' ";
EXCEPTION_333 = "NSCompat: The namespace of '/p1' is not allowed by wildcard in base";
EXCEPTION_334 = "The occurrence range of '/p1' is not a valid restriction of base element's range";
EXCEPTION_335 = "NameAndTypeOK: The Element name/uri in restriction does not match that of corresponding base element";
EXCEPTION_336 = "NameAndTypeOK: Element '/p1' is nillable in the restriction, while it's not in the base";
EXCEPTION_337 = "NameAndTypeOK: Element '/p1' is either not fixed, or is not fixed with the same value as in the base";
EXCEPTION_338 = "NameAndTypeOK: The disallowed substitutions, for element '/p1', are not a superset of those of the base element";
EXCEPTION_339 = "NameAndTypeOK: Element '/p1' has a type that does not derive from that of the base";
EXCEPTION_340 = "NameAndTypeOK: Derived element '/p1' has fewer Identity Constraints than base element '/p2'";
EXCEPTION_341 = "NameAndTypeOK: Derived element '/p1' has an Identity Constraint that does not appear on base element '/p2'";
EXCEPTION_342 = "RecurseAsIfGroup: Element '/p1' belongs to a group of a variety different from that of the base";
EXCEPTION_343 = "Occurrence range of group is not a valid restriction of occurrence range of base group";
EXCEPTION_344 = "Recurse: There is not a complete functional mapping between the particles";
EXCEPTION_345 = "Forbidden restriction of 'any': Choice,Seq,All,Elt";
EXCEPTION_346 = "Forbidden restriction of 'all': Choice,Seq,Elt";
EXCEPTION_347 = "Forbidden restriction of 'choice': All,Seq,Leaf";
EXCEPTION_348 = "Forbidden restriction of 'sequence': Elt";
EXCEPTION_349 = "Wildcard's occurrence range not a restriction of base wildcard's range";
EXCEPTION_350 = "Wildcard is not a subset of corresponding wildcard in base";
EXCEPTION_351 = "Group's occurrence range not a restriction of base wildcard's range";
EXCEPTION_352 = "RecurseUnordered: There is not a complete functional mapping between the particles";
EXCEPTION_353 = "MapAndSum: There is not a complete functional mapping between the particles";
EXCEPTION_354 = "Particle derivation: Invalid content spec node type";
EXCEPTION_355 = "NodeIDMap overflows and exceeds the largest available size";

